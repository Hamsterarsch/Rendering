{
	`code`: `cbuffer localConstantBuffer : register(b0) { uint tileCount; }
Buffer<uint> volumeTileFlags : register(t0);
globallycoherent RWBuffer<uint> activeTileList : register(u0);

[numthreads(32, 1, 1)]
void main(uint3 dispatchID : SV_DispatchThreadID)
{
activeTileList[0] = 1;

if(dispatchID.x >= tileCount)
{
return;

}

if(volumeTileFlags[dispatchID.x])
{
uint targetIndex = 1;
InterlockedAdd(activeTileList[0], 1, targetIndex);
activeTileList[targetIndex] = dispatchID.x;
}

}
`,
	`numConstantsSlots`: `0`,
	`numTextureSlots`: `0`
}